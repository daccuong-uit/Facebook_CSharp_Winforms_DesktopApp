<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>